# {{ ansible_managed }}

{%- set client=item -%}

# Specify that we are a client and that we will be pulling certain config file
# directives from the server.
client

# Use the same setting as you are using on the server. On most systems, the VPN
# will not function unless you partially or fully disable the firewall for the
# TUN/TAP interface.
dev {{ openvpn_dev }}

# Are we connecting to a TCP or UDP server?  Use the same setting as on the
# server.
proto {{ openvpn_proto }}

# Encrypt packets with cipher algorithm
cipher {{ openvpn_cipher }}

# The hostname/IP and port of the server. You can have multiple remote entries
# to load balance between the servers.
remote {{openvpn_host}} {{openvpn_port}}

# Keep trying indefinitely to resolve the host name of the OpenVPN server.
# Very useful on machines which are not permanently connected to the internet
# such as laptops.
resolv-retry {{ openvpn_resolv_retry }}

# Most clients don't need to bind to a specific local port number.
nobind

# Try to preserve some state across restarts.
persist-key
persist-tun

# SSL/TLS parms. See the server config file for more description.  It's best to
# use a separate .crt/.key file pair for each client.  A single ca file can be
# used for all clients.
{% if openvpn_unified_client_profiles %}
<ca>
{{ openvpn_ca_file_contents }}
</ca>
<cert>
{{ openvpn_client_cert_output |default([{'item':client,'stdout':''}])|selectattr('item', 'match', client)|map(attribute='stdout')|list|first }}
</cert>
<key>
{{ openvpn_client_keys_output |default([{'item':client,'stdout':''}])|selectattr('item', 'match', client)|map(attribute='stdout')|list|first }}
</key>
{% if openvpn_tls_auth %}
key-direction 1
<tls-auth>
{{ openvpn_tls_auth_file_contents | default('') }}
</tls-auth>
{% endif %}

{% else %}
ca ca.crt
cert {{client}}.crt
key {{client}}.key
{% endif %}

# Verify server certificate by checking that the certicate has the nsCertType
# field set to "server".  This is an important precaution to protect against a
# potential attack discussed here: http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate your server certificates with
# the nsCertType field set to "server".  The build-key-server script in the
# easy-rsa folder will do this.
ns-cert-type server

{% if openvpn_tls_auth and not openvpn_unified_client_profiles -%}
# Use a static pre-shared key (PSK)
tls-auth {{openvpn_tls_key}} 1
{% endif %}

# Enable compression on the VPN link. Don't enable this unless it is also
# enabled in the server config file.
{% if openvpn_comp_lzo -%}
comp-lzo
{% else -%}
;comp-lzo
{% endif %}

# Set log file verbosity.
verb {{openvpn_verb}}

{% if openvpn_use_pam or openvpn_use_ldap %}
auth-user-pass
{% endif %}

{% for option in openvpn_client_options %}
{{option}}
{% endfor %}
